// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using club.van.api.dao.EF;

namespace club.van.api.Migrations
{
    [DbContext(typeof(ClubVanContext))]
    partial class ClubVanContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("club.van.api.data.Empresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnName("ATIVO")
                        .HasColumnType("bit");

                    b.Property<string>("Cnpj")
                        .HasColumnName("CNPJ")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Nome")
                        .HasColumnName("NOME")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("RazaoSocial")
                        .HasColumnName("RAZAO_SOCIAL")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("EMPRESA");
                });

            modelBuilder.Entity("club.van.api.data.Perfil", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnName("NOME")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("PERFIL");
                });

            modelBuilder.Entity("club.van.api.data.Rota", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EMPRESA_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnName("NOME")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid?>("VEICULO_ID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EMPRESA_ID");

                    b.HasIndex("VEICULO_ID");

                    b.ToTable("ROTA");
                });

            modelBuilder.Entity("club.van.api.data.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnName("ATIVO")
                        .HasColumnType("bit");

                    b.Property<string>("Bairro")
                        .HasColumnName("BAIRRO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnName("CIDADE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cpf")
                        .HasColumnName("CPF")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<Guid?>("EMPRESA_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnName("EMAIL")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Nome")
                        .HasColumnName("NOME")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<Guid?>("PERFIL_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ROTA_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Rua")
                        .HasColumnName("RUA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnName("SENHA")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Uf")
                        .HasColumnName("UF")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EMPRESA_ID");

                    b.HasIndex("PERFIL_ID");

                    b.HasIndex("ROTA_ID");

                    b.ToTable("USUARIO");
                });

            modelBuilder.Entity("club.van.api.data.Veiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid?>("EMPRESA_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Modelo")
                        .HasColumnName("MODELO")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Placa")
                        .HasColumnName("PLACA")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("EMPRESA_ID");

                    b.ToTable("VEICULO");
                });

            modelBuilder.Entity("club.van.api.data.ViagemDia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Domingo")
                        .HasColumnName("DOMINGO")
                        .HasColumnType("bit");

                    b.Property<int>("NumeroSemana")
                        .HasColumnName("NUMERO_SEMANA")
                        .HasColumnType("int");

                    b.Property<bool>("QuartaFeira")
                        .HasColumnName("QUARTA_FEIRA")
                        .HasColumnType("bit");

                    b.Property<bool>("QuintaFeira")
                        .HasColumnName("QUINTA_FEIRA")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ROTA_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Sabado")
                        .HasColumnName("SABADO")
                        .HasColumnType("bit");

                    b.Property<bool>("SegundaFeira")
                        .HasColumnName("SEGUNDA_FEIRA")
                        .HasColumnType("bit");

                    b.Property<bool>("SextaFeira")
                        .HasColumnName("SEXTA_FEIRA")
                        .HasColumnType("bit");

                    b.Property<bool>("TercaFeira")
                        .HasColumnName("TERCA_FEIRA")
                        .HasColumnType("bit");

                    b.Property<Guid?>("USUARIO_ID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ROTA_ID");

                    b.HasIndex("USUARIO_ID");

                    b.ToTable("VIAGEM_DIA");
                });

            modelBuilder.Entity("club.van.api.data.Rota", b =>
                {
                    b.HasOne("club.van.api.data.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EMPRESA_ID");

                    b.HasOne("club.van.api.data.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VEICULO_ID");
                });

            modelBuilder.Entity("club.van.api.data.Usuario", b =>
                {
                    b.HasOne("club.van.api.data.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EMPRESA_ID");

                    b.HasOne("club.van.api.data.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("PERFIL_ID");

                    b.HasOne("club.van.api.data.Rota", "Rota")
                        .WithMany()
                        .HasForeignKey("ROTA_ID");
                });

            modelBuilder.Entity("club.van.api.data.Veiculo", b =>
                {
                    b.HasOne("club.van.api.data.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EMPRESA_ID");
                });

            modelBuilder.Entity("club.van.api.data.ViagemDia", b =>
                {
                    b.HasOne("club.van.api.data.Rota", "Rota")
                        .WithMany()
                        .HasForeignKey("ROTA_ID");

                    b.HasOne("club.van.api.data.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("USUARIO_ID");
                });
#pragma warning restore 612, 618
        }
    }
}
